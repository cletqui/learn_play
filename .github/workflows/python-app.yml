# This workflow will install Python dependencies, create a release asset and upload it to the repository

name: \"Learn & Play\" application

on:
  push:
    branches: ["main"]

permissions:
  contents: read

jobs:
  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Print info
        run: echo "The job was automatically triggered by a ${{ github.event_name }} event for the branch ${{ github.ref }} of ${{ github.repository }}."
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  createrelease:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > Release.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: Release
          path: Release.txt
